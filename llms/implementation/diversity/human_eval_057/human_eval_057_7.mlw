
module HumanEval057
  use int.Int
  use list.List
  let rec get_direction (l: list int) : int =
    match l with
    | Cons x (Cons y r) ->
        if x < y then 1 else if x > y then -1 else get_direction (Cons y r)
    | _ -> 0
    end
  let rec check_dir (l: list int) (dir: int) : bool =
    match l with
    | Cons x (Cons y r) ->
        if dir = 1 then (x <= y && check_dir (Cons y r) dir)
        else if dir = -1 then (x >= y && check_dir (Cons y r) dir)
        else check_dir (Cons y r) dir
    | _ -> true
    end
  let monotonic (l: list int) : bool =
    check_dir l (get_direction l)
end


