
module HumanEval152
  use int.Int
  use int.Abs
  use list.List
  use list.Length
  use list.NthNoOpt

  let rec zip (l1 : list int) (l2 : list int) : list (int, int) =
    match l1, l2 with
    | Nil, Nil -> Nil
    | Cons x xs, Cons y ys -> Cons (x, y) (zip xs ys)
    | _, _ -> Nil
    end

  let rec compare_zip (zl : list (int, int)) : list int =
    match zl with
    | Nil -> Nil
    | Cons (a, b) zs -> Cons (if a = b then 0 else abs (a - b)) (compare_zip zs)
    end

  let compare (l1 : list int) (l2 : list int) : list int =
    ensures { length result = length l1 }
        ensures { length l1 = length l2 }
        ensures { forall i: int. 0 <= i < length l1 -> nth i result = abs (nth i l1 - nth i l2)}
    compare_zip (zip l1 l2)
  end


