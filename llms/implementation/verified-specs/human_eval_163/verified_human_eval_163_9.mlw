module HumanEval163
  use int.Int
  use int.MinMax
  use list.List
  use list.Reverse
  use list.NthNoOpt
  use list.Length

  let generate_integers (a:int) (b:int) : list int =
    ensures {
        let lo = min a b in
        let hi = max a b in
        length result = hi - lo + 1 /\
        forall i: int. 0 <= i < length result ->
            nth i result = lo + i}
    let start = min a b in
    let finish = max a b in
    let ref acc = Nil in
    (*
      acc = reverse of the prefix [start..i-1], i.e.,
      acc = reverse (map (fun x -> x) [start .. i-1])
      acc length = i - start
    *)
    for i = start to finish do
      invariant { start <= i <= finish + 1 }
      invariant { length acc = i - start }
      invariant {
        forall k:int. 0 <= k < length acc ->
          nth k acc = i - 1 - k + start
      }
      acc <- Cons i acc
    done;
    reverse acc
end
