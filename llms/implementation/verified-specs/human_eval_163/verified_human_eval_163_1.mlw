module HumanEval163
  use int.Int
  use int.MinMax
  use list.List
  use list.Length
  use list.NthNoOpt

  let generate_integers (a:int) (b:int) : list int =
    ensures {
        let lo = min a b in
        let hi = max a b in
        length result = hi - lo + 1 /\
        forall i: int. 0 <= i < length result ->
            nth i result = lo + i}
    let start = min a b in
    let finish = max a b in
    let ref acc = Nil in
    (* for i = finish downto start do ... is equivalent to:
       for i = finish downto start do ... done; *)
    for i = finish downto start do
      invariant { (* Number of elements in acc so far: finish - i *)
        length acc = finish - i
      }
      invariant { (* All constructed elements are correct *)
        forall j:int. 0 <= j < length acc -> nth j acc = (i+1) + j
      }
      invariant { (* The total number of elements to build is finish - start + 1 *)
        length acc + (i - start + 1) = finish - start + 1
      }
      acc <- Cons i acc
    done;
    acc
end
