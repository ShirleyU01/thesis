module HumanEval060
  use int.Int

  predicate sum (n : int) (a : int)
    axiom sum_zero :
        forall a. sum 0 a <-> a = 0
    axiom sum_ind :
        forall a n . sum n a <-> exists b. sum (n-1) b /\ a = b + n 

  let rec sum_to_n_aux (n: int) (acc: int) : int
    requires { n >= 0 }
    ensures  { sum n (result) }
    variant  { n }
  =
    if n = 0 then acc else sum_to_n_aux (n - 1) (acc + n)

  let sum_to_n (n: int) : int =
    ensures { sum n result }
    requires { n >= 0 }
    sum_to_n_aux n 0
end
