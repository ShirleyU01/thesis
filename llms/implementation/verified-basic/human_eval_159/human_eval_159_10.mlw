
module HumanEval159
  use int.Int
  use int.MinMax
  use list.List

  let eat (number:int) (need:int) (remaining:int) : list int =
    ensures {
        let total_eaten = if need <= remaining then number + need else number + remaining in
        let carrots_left = if need <= remaining then remaining - need else 0 in
        result = Cons total_eaten (Cons carrots_left Nil)
        }
    let to_eat = min need remaining in
    let l = Cons (remaining - to_eat) (Cons (number + to_eat) Nil) in
    match l with
    | Cons a (Cons b Nil) -> Cons b (Cons a Nil)
    | _ -> Nil
    end
end


