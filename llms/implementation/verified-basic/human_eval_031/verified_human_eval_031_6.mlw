module HumanEval031
  use int.Int
  use int.EuclideanDivision

  let rec is_prime_helper (n: int) (d: int) : bool
    variant { n - d }
    requires { n >= 2 }
    requires { d >= 2 }
    ensures {
      result <-> (forall k: int. d <= k /\ k < n -> not (mod n k = 0))
    }
  =
    if d * d > n then true
    else if mod n d = 0 then false
    else is_prime_helper n (d + 1)
  
  let is_prime (n: int) : bool =
    ensures { result <-> (n >= 2 /\ forall d: int. 2 <= d /\ d < n -> not (mod n d = 0)) }
    if n <= 1 then false else is_prime_helper n 2
end
