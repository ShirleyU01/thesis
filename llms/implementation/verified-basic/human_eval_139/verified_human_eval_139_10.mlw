module HumanEval139
  use int.Int
  use int.Fact

  predicate spec_fact (n : int) (a : int)
    axiom spec_fact_base :
      forall a. spec_fact 1 a <-> a = 1
    axiom spec_fact_ind :
      forall a n . spec_fact n a <-> exists b. spec_fact (n-1) b /\ a = b * fact n

  let special_factorial (n: int) : int =
    ensures { spec_fact n result }
    let ref res = 1 in
    (* Invariant: at the beginning of each iteration, res = \prod_{k=1}^{i-1} fact k *)
    for i = 1 to n do
      invariant { 1 <= i <= n+1 }
      invariant {
        res = (if i = 1 then 1 else (
          let ghost prod = ref 1 in
          for j = 1 to i-1 do prod := !prod * fact j done;
          !prod
        ))
      }
      res <- res * fact i
    done;
    res
end
