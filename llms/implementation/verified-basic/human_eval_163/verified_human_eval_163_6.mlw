module HumanEval163
  use int.Int
  use int.MinMax
  use list.List
  use list.RevAppend
  use list.NthNoOpt
  use list.Length

  let generate_integers (a:int) (b:int) : list int =
    ensures {
        let lo = min a b in
        let hi = max a b in
        length result = hi - lo + 1 /\
        forall i: int. 0 <= i < length result ->
            nth i result = lo + i}
    let start = min a b in
    let finish = max a b in
    let ref acc = Nil in
    (* Loop invariant: acc is the list of integers from (i+1) to finish, in ascending order *)
    for i = finish downto start do
      invariant { start <= i <= finish + 1 /\
                  length acc = finish - i + 1 /\
                  forall k:int. 0 <= k < length acc -> nth k acc = i + k }
      acc <- Cons i acc
    done;
    (* After the loop: i = start - 1, acc contains the full range [start,finish] in order *)
    acc
end
