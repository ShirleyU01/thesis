{
    "ideas": [
        {
            "description": "Verify that mod (abs a) 10 = mod a 10 when a >= 0 and mod (abs a) 10 = mod (-a) 10 when a < 0, and similarly for b. Prove this with a lemma and use it to ensure the ensures clause can be discharged automatically.",
            "implementation": "module HumanEval097\n  use int.Int\n  use int.EuclideanDivision\n  use int.Abs\n\n  lemma mod_abs_eq_mod: forall a:int, mod (abs a) 10 = if a >= 0 then mod a 10 else mod (-a) 10\n\n  let multiply (a : int) (b : int) : int =\n    ensures { result = mod (abs a) 10 * mod (abs b) 10 }\n    let ua = if a >= 0 then mod a 10 else mod (-a) 10 in\n    let ub = if b >= 0 then mod b 10 else mod (-b) 10 in\n    ua * ub\nend\n"
        }
    ]
}