module Sum

    use int.Int
    use list.List
    use list.Length
    use list.NthNoOpt
    use list.Sum
    use list.Append


    let rec nth_1 (n : int) (l : list int) : int =
    requires { length l > 0 }
    requires { 0 <= n /\ n < length l }
    variant { n }
    ensures { nth n l = result }
    match l with 
    | Cons x r -> if n = 0 then x else nth_1 (n - 1) r
    end 
    
    let sum (l : list int) : int =
    ensures {  }


  end