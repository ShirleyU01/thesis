(*
def below_zero(operations: List[int]) -> bool:
    """ You're given a list of deposit and withdrawal operations on a bank account that starts with
    zero balance. Your task is to detect if at any point the balance of account fallls below zero, and
    at that point function should return True. Otherwise it should return False.
    >>> below_zero([1, 2, 3])
    False
    >>> below_zero([1, 2, -4, 5])
    True
    """
*)

module HumanEval003Goal

    use list.List
    use int.Int
    use list.Length
    use list.NthNoOpt

    let rec nth_1 (n : int) (l : list int) : int =
        requires { length l > 0 }
        requires { 0 <= n /\ n < length l }
        variant { n }
        ensures { nth n l = result }
        match l with 
        | Cons x r -> if n = 0 then x else nth_1 (n - 1) r
        end 

    let below_zero (l : list int) : bool =
        let ref acc = 0 in
        let n = length l in 
        for i = 0 to n - 1 do
            acc <- acc + nth_1 l i;
            if acc < 0 then false
        done;
        true
    

end